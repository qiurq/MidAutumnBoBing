android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.a:
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.b:
    java.lang.Class shell -> b
    android.app.Activity activity -> a
    cn.sharesdk.framework.FakeActivity resultReceiver -> c
    java.util.HashMap result -> d
    android.view.View contentView -> e
    void setActivity(android.app.Activity) -> a
    void setContentView(android.view.View) -> a
    void onCreate() -> a
    void onNewIntent(android.content.Intent) -> a
    void onStart() -> b
    void onPause() -> c
    void onResume() -> d
    void onStop() -> e
    void onRestart() -> f
    boolean onFinish() -> g
    void onDestroy() -> h
    void finish() -> i
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    android.content.Context getContext() -> j
    void show(android.content.Context,android.content.Intent) -> a
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> a
    void setResult(java.util.HashMap) -> a
    void sendResult() -> k
    void onResult(java.util.HashMap) -> b
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.c:
    cn.sharesdk.framework.i a -> c
    android.content.Context context -> a
    cn.sharesdk.framework.PlatformDb db -> b
    void a() -> a
    void initDevInfo(java.lang.String) -> a
    java.lang.String getDevinfo(java.lang.String) -> b
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> a
    android.content.Context getContext() -> b
    java.lang.String getName() -> c
    int getPlatformId() -> d
    int getSortId() -> e
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> a
    boolean isValid() -> f
    void SSOSetting(boolean) -> a
    boolean b() -> g
    void setNetworkDevinfo() -> h
    boolean checkAuthorize(int,java.lang.Object) -> a
    void share(cn.sharesdk.framework.Platform$ShareParams) -> a
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> c
    void timeline(int,int,java.lang.String) -> a
    void showUser(java.lang.String) -> d
    void userInfor(java.lang.String) -> e
    void listFriend(int,int,java.lang.String) -> b
    void getFriendList(int,int,java.lang.String) -> c
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb getDb() -> i
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> a
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.d:
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.e:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.f:
    android.content.SharedPreferences db -> a
    java.lang.String get(java.lang.String) -> a
    java.lang.String getToken() -> a
    long getExpiresIn() -> b
    long getExpiresTime() -> c
    java.lang.String getUserId() -> d
    boolean isValid() -> e
cn.sharesdk.framework.Service -> cn.sharesdk.framework.g:
    void onUnbind() -> a
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> a
    void initSDK(android.content.Context,java.lang.String,boolean) -> a
    void c() -> g
    java.lang.String getSDKVersionName() -> a
    int getSDKVersionCode() -> b
    cn.sharesdk.framework.Platform[] getPlatformList() -> c
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> a
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> a
    boolean isDebug() -> d
    java.lang.String b(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> e
    boolean b() -> f
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.i:
    android.widget.ImageView btnBack -> a
    android.widget.TextView tvTitle -> b
    android.widget.TextView btnRight -> c
    void init(android.content.Context) -> a
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.j:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.k:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> c
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.l:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
cn.sharesdk.framework.g -> cn.sharesdk.framework.m:
    java.util.HashMap params -> a
    void set(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String,java.lang.Class) -> a
    java.util.HashMap toMap() -> a
    java.lang.String toString() -> toString
    java.lang.String[] getCustomFlag() -> b
    void setCustomFlag(java.lang.String[]) -> a
cn.sharesdk.framework.i -> cn.sharesdk.framework.n:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.PlatformDb c -> b
    cn.sharesdk.framework.d d -> c
    int e -> d
    int f -> e
    boolean g -> f
    boolean h -> g
    boolean i -> h
    void a(java.lang.String) -> a
    int b() -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    boolean d() -> b
    void a(boolean) -> a
    boolean f() -> c
    boolean j() -> d
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void b(int,java.lang.Object) -> a
    void c(int,java.lang.Object) -> b
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void c(java.lang.String) -> b
    void a(int,int,java.lang.String) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.k -> cn.sharesdk.framework.o:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.p:
    android.os.Handler a -> a
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.n -> cn.sharesdk.framework.q:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a() -> a
    int b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.a.a:
    java.io.File a -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.a.b:
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.a.c:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.a.d:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.f a(cn.sharesdk.framework.network.d) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.a.e:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.a.f:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.a.g:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.a.h:
    cn.sharesdk.framework.network.j a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.a.i:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.l a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.r:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.s:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.lang.String i -> i
    boolean j -> j
    java.lang.String k -> k
    boolean m -> l
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void i() -> h
    void j() -> i
    void a(android.os.Message) -> a
    void k() -> j
    void l() -> k
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int,cn.sharesdk.framework.Platform) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> f
    boolean h() -> g
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(cn.sharesdk.framework.p) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.t:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.u:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.v:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.b.a:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.b.b:
    cn.sharesdk.framework.utils.f a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.b.c:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.b.d:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a d -> d
    java.lang.String b -> b
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String c -> c
    boolean h -> h
    int i -> i
    cn.sharesdk.framework.network.h j -> j
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    long a() -> a
    long a(java.lang.String) -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.graphics.Bitmap) -> a
    void b() -> b
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String c(java.lang.String) -> c
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.b.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.b.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.b.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.b.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.b.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.b.e:
    cn.sharesdk.framework.statistics.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.statistics.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.statistics.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.b.b.a:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.b.b.b:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.b.b.c:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.b.b.d:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.b.b.e:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.b.b.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.b.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.c.a:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> a
    android.graphics.Bitmap getBitmap(java.io.File,int) -> a
    android.graphics.Bitmap a(java.io.InputStream,int) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> a
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> b
    android.graphics.Bitmap captureView(android.view.View,int,int) -> a
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.c.b:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> a
    int getScreenWidth(android.content.Context) -> a
    int getScreenHeight(android.content.Context) -> b
    int getResId(java.lang.Class,java.lang.String) -> a
    int getBitmapRes(android.content.Context,java.lang.String) -> a
    int getStringRes(android.content.Context,java.lang.String) -> b
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> c
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.c.c:
    java.lang.String[] prays -> a
    android.os.Handler handler -> b
    void prepare() -> a
    void reset() -> b
    void printPray() -> c
    void handleMessage(android.os.Message) -> b
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> b
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> b
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> a
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> a
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> a
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> a
    void access$000(android.os.Message) -> a
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.c.d:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.c.e:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> h
    java.lang.String k() -> i
    java.lang.String l() -> j
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> k
    java.lang.String n() -> l
    int o() -> m
    boolean z() -> v
    org.json.JSONArray p() -> n
    java.lang.String q() -> o
    java.lang.String A() -> w
    void c(java.lang.String) -> c
    java.lang.String r() -> p
    int t() -> q
    java.lang.String u() -> r
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    boolean a(java.lang.String) -> a
    java.lang.String w() -> s
    boolean x() -> t
    java.lang.String y() -> u
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.c.f:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.c.g:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.c.h:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.c.i:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.c.j:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.c.k:
    java.io.File a -> a
    java.util.HashMap b -> b
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object c(java.lang.String) -> c
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.c.l:
    boolean handleMessage(android.os.Message) -> handleMessage
com.banker.framework.activity.BaseActivity -> com.banker.framework.a.a:
    android.app.ProgressDialog mProgressDialog -> b
    android.widget.Toast mToast -> a
    void onCreate(android.os.Bundle) -> onCreate
    void startVibrator() -> a_
    void onResume() -> onResume
    void setAlertDialogClosable(android.app.AlertDialog,boolean) -> a
    java.lang.String useStringTypeResource(int) -> a
    void showProgressDialog(java.lang.String,java.lang.String) -> a
    void dismissProgressDialog() -> b
    void onStart() -> onStart
    com.banker.framework.application.BaseApplication getBaseApplication() -> c
    void startActivity(java.lang.Class) -> a
    android.view.View inflateView(int) -> b
    void showToast(int) -> c
    void showShare() -> d
    void saveIcon() -> e
com.banker.framework.activity.FrameActivity -> com.banker.framework.a.b:
    com.banker.framework.views.TopBarView topBarView -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> g
    void setTopTitle(java.lang.String) -> a
    void hideTopRightBtn() -> e
    void hideTopBackBtn() -> f
    void topBackBtnListener(android.view.View$OnClickListener) -> a
    void topRightBtnListener(android.view.View$OnClickListener) -> b
    void setTopRightBtnText(java.lang.String) -> b
    void appendFrameworkCenter(int) -> d
com.banker.framework.application.BaseApplication -> com.banker.framework.application.BaseApplication:
    android.content.Context appContext -> a
    android.os.Handler appHandler -> b
    int screenHeight -> c
    int screenWidth -> d
    float screenDensity -> e
    int screenDensityDpi -> f
    void onCreate() -> onCreate
    void initDisplayMetrics() -> a
    void onTerminate() -> onTerminate
    void mkDirs() -> b
com.banker.framework.bean.BaseBean -> com.banker.framework.b.a:
    java.lang.String toString() -> toString
com.banker.framework.constant.Constants -> com.banker.framework.c.a:
    java.lang.String BASE_PATH -> a
    java.lang.String LOG_DIR -> b
    java.lang.String LOG_CRASH_FILE -> c
com.banker.framework.exception.GlobalExceptionHandler -> com.banker.framework.d.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultUncaughtExceptionHandler -> a
    java.lang.String OS_LINE_SEPARATOR -> b
    java.lang.String mAppVersionName -> c
    int mAppVersionCode -> d
    java.lang.String mOsModel -> e
    int mOsSDKInt -> f
    void clearOutDateLogs() -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    java.lang.StringBuilder getLogCatOut() -> a
    void access$0(com.banker.framework.exception.GlobalExceptionHandler) -> a
com.banker.framework.exception.GlobalExceptionHandler$1 -> com.banker.framework.d.b:
    com.banker.framework.exception.GlobalExceptionHandler this$0 -> a
    void run() -> run
com.banker.framework.exception.GlobalExceptionHandler$2 -> com.banker.framework.d.c:
    com.banker.framework.exception.GlobalExceptionHandler this$0 -> a
    long val$_currentTime -> b
    boolean accept(java.io.File,java.lang.String) -> accept
com.banker.framework.utils.HorizontalListView -> com.banker.framework.utils.HorizontalListView:
    boolean mAlwaysOverrideTouch -> a
    android.widget.ListAdapter mAdapter -> b
    int mLeftViewIndex -> f
    int mRightViewIndex -> g
    int mCurrentX -> c
    int mNextX -> d
    int mMaxX -> h
    int mDisplayOffset -> i
    android.widget.Scroller mScroller -> e
    android.view.GestureDetector mGesture -> j
    java.util.Queue mRemovedViewQueue -> k
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> l
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> m
    boolean mDataChanged -> n
    android.database.DataSetObserver mDataObserver -> o
    android.view.GestureDetector$OnGestureListener mOnGesture -> p
    void initView() -> a
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> b
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> a
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void removeNonVisibleItems(int) -> b
    void positionItems(int) -> c
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.banker.framework.utils.HorizontalListView,boolean) -> a
    void access$3(com.banker.framework.utils.HorizontalListView) -> a
    android.widget.AdapterView$OnItemClickListener access$4(com.banker.framework.utils.HorizontalListView) -> b
    int access$5(com.banker.framework.utils.HorizontalListView) -> c
    android.widget.AdapterView$OnItemSelectedListener access$6(com.banker.framework.utils.HorizontalListView) -> d
com.banker.framework.utils.HorizontalListView$1 -> com.banker.framework.utils.a:
    com.banker.framework.utils.HorizontalListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.banker.framework.utils.HorizontalListView$2 -> com.banker.framework.utils.b:
    com.banker.framework.utils.HorizontalListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.banker.framework.utils.HorizontalListView$3 -> com.banker.framework.utils.c:
    com.banker.framework.utils.HorizontalListView this$0 -> a
    void run() -> run
com.banker.framework.utils.ShakeListener -> com.banker.framework.utils.d:
    java.lang.String TAG -> a
    android.hardware.SensorManager sensorManager -> b
    android.hardware.Sensor sensor -> c
    com.banker.framework.utils.ShakeListener$OnShakeListener onShakeListener -> d
    android.content.Context mContext -> e
    float lastX -> f
    float lastY -> g
    float lastZ -> h
    long lastUpdateTime -> i
    void start() -> a
    void stop() -> b
    void setOnShakeListener(com.banker.framework.utils.ShakeListener$OnShakeListener) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.banker.framework.utils.ShakeListener$OnShakeListener -> com.banker.framework.utils.e:
    void onShake() -> a
com.banker.framework.utils.share_sdk.onekeyshare.CustomerLogo -> com.banker.framework.utils.a.a.a:
    java.lang.String label -> a
    android.graphics.Bitmap logo -> b
    android.view.View$OnClickListener listener -> c
com.banker.framework.utils.share_sdk.onekeyshare.EditPage -> com.banker.framework.utils.a.a.b:
    java.util.HashMap reqData -> b
    android.widget.RelativeLayout rlPage -> c
    cn.sharesdk.framework.TitleLayout llTitle -> d
    android.widget.LinearLayout llBody -> e
    android.widget.RelativeLayout rlThumb -> f
    android.widget.EditText etContent -> g
    android.widget.TextView tvCounter -> h
    android.widget.ImageView ivPin -> i
    android.widget.ImageView ivImage -> j
    android.graphics.Bitmap image -> k
    boolean shareImage -> l
    android.widget.LinearLayout llPlat -> m
    cn.sharesdk.framework.Platform[] platformList -> n
    android.view.View[] views -> o
    boolean dialogMode -> p
    android.view.View tmpBgView -> q
    android.graphics.drawable.Drawable background -> r
    void setShareData(java.util.HashMap) -> c
    void setDialogMode() -> l
    void setActivity(android.app.Activity) -> a
    void setBackGround(android.view.View) -> b
    void onCreate() -> a
    android.widget.RelativeLayout getPageView() -> n
    cn.sharesdk.framework.TitleLayout getPageTitle() -> o
    android.widget.LinearLayout getPageBody() -> p
    android.widget.LinearLayout getMainBody() -> q
    android.widget.RelativeLayout getThumbView() -> r
    void showThumb() -> s
    android.widget.LinearLayout getBodyBottom() -> t
    android.widget.LinearLayout getAtLine(java.lang.String) -> a
    android.view.View getSep() -> u
    android.widget.LinearLayout getPlatformList() -> v
    android.widget.ImageView getImagePin() -> w
    void genBackground() -> x
    java.lang.String getName(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> m
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> b
    void hideSoftInput() -> y
    boolean onFinish() -> g
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void access$0(com.banker.framework.utils.share_sdk.onekeyshare.EditPage,cn.sharesdk.framework.Platform[]) -> a
    cn.sharesdk.framework.Platform[] access$1(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> a
    android.graphics.Bitmap access$2(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> b
    android.app.Activity access$3(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> c
    android.widget.RelativeLayout access$4(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> d
    android.widget.ImageView access$5(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> e
    void access$6(com.banker.framework.utils.share_sdk.onekeyshare.EditPage,boolean) -> a
    java.util.HashMap access$7(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> f
    void access$8(com.banker.framework.utils.share_sdk.onekeyshare.EditPage,android.graphics.Bitmap) -> a
    boolean access$9(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> g
    android.widget.ImageView access$10(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> h
    android.widget.LinearLayout access$11(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> i
    void access$12(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> j
    android.widget.RelativeLayout access$13(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> k
    android.graphics.drawable.Drawable access$14(com.banker.framework.utils.share_sdk.onekeyshare.EditPage) -> l
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$1 -> com.banker.framework.utils.a.a.c:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage access$0(com.banker.framework.utils.share_sdk.onekeyshare.EditPage$1) -> a
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$1$1 -> com.banker.framework.utils.a.a.d:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage$1 this$1 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$2 -> com.banker.framework.utils.a.a.e:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$3 -> com.banker.framework.utils.a.a.f:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$4 -> com.banker.framework.utils.a.a.g:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage access$0(com.banker.framework.utils.share_sdk.onekeyshare.EditPage$4) -> a
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$4$1 -> com.banker.framework.utils.a.a.h:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage$4 this$1 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$5 -> com.banker.framework.utils.a.a.i:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$6 -> com.banker.framework.utils.a.a.j:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    int val$postSel -> b
    int val$dp_24 -> c
    int val$dp_9 -> d
    boolean handleMessage(android.os.Message) -> handleMessage
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$7 -> com.banker.framework.utils.a.a.k:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
com.banker.framework.utils.share_sdk.onekeyshare.EditPage$8 -> com.banker.framework.utils.a.a.l:
    com.banker.framework.utils.share_sdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
com.banker.framework.utils.share_sdk.onekeyshare.FollowList -> com.banker.framework.utils.a.a.m:
    cn.sharesdk.framework.TitleLayout llTitle -> b
    cn.sharesdk.framework.Platform platform -> c
    com.banker.framework.utils.share_sdk.onekeyshare.FollowList$FollowAdapter adapter -> d
    void setPlatform(cn.sharesdk.framework.Platform) -> a
    void onCreate() -> a
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.banker.framework.utils.share_sdk.onekeyshare.FollowList$FollowAdapter -> com.banker.framework.utils.a.a.n:
    int curPage -> a
    java.util.ArrayList follows -> b
    java.util.HashMap map -> c
    boolean hasNext -> d
    cn.sharesdk.framework.Platform platform -> e
    com.banker.framework.utils.share_sdk.onekeyshare.FollowList$PRTHeader llHeader -> f
    android.graphics.Bitmap bmChd -> g
    android.graphics.Bitmap bmUnch -> h
    void setPlatform(cn.sharesdk.framework.Platform) -> a
    void next() -> k
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
    com.banker.framework.utils.share_sdk.onekeyshare.FollowList$Following getItem(int) -> a
    long getItemId(int) -> b
    int getCount() -> a
    android.view.View getHeaderView() -> b
    void onPullDown(int) -> c
    void onRequest() -> c
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    java.util.ArrayList parseList(java.util.HashMap) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> d
    java.lang.Object getItem(int) -> d
com.banker.framework.utils.share_sdk.onekeyshare.FollowList$FollowListItem -> com.banker.framework.utils.a.a.o:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvSign -> c
    android.widget.ImageView ivCheck -> d
com.banker.framework.utils.share_sdk.onekeyshare.FollowList$Following -> com.banker.framework.utils.a.a.p:
    boolean checked -> a
    java.lang.String screeName -> b
    java.lang.String description -> c
    java.lang.String uid -> d
    java.lang.String icon -> e
com.banker.framework.utils.share_sdk.onekeyshare.FollowList$PRTHeader -> com.banker.framework.utils.a.a.q:
    android.widget.TextView tvHeader -> a
    com.banker.framework.utils.share_sdk.onekeyshare.FollowList$RotateImageView ivArrow -> b
    android.widget.ProgressBar pbRefreshing -> c
    void onPullDown(int) -> a
    void onRequest() -> a
    void reverse() -> b
com.banker.framework.utils.share_sdk.onekeyshare.FollowList$RotateImageView -> com.banker.framework.utils.a.a.r:
    int rotation -> a
    void setRotation(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare -> com.banker.framework.utils.a.a.s:
    android.widget.FrameLayout flPage -> b
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView grid -> c
    android.widget.Button btnCancel -> d
    android.view.animation.Animation animShow -> e
    android.view.animation.Animation animHide -> f
    boolean finishing -> g
    boolean canceled -> h
    java.util.HashMap reqMap -> i
    java.util.ArrayList customers -> j
    int notifyIcon -> k
    java.lang.String notifyTitle -> l
    boolean silent -> m
    cn.sharesdk.framework.PlatformActionListener callback -> n
    com.banker.framework.utils.share_sdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> o
    boolean dialogMode -> p
    boolean disableSSO -> q
    java.util.HashMap hiddenPlatforms -> r
    android.view.View bgView -> s
    void show(android.content.Context) -> a
    void setNotification(int,java.lang.String) -> a
    void setTitle(java.lang.String) -> a
    void setTitleUrl(java.lang.String) -> b
    void setText(java.lang.String) -> c
    void setImagePath(java.lang.String) -> d
    void setComment(java.lang.String) -> e
    void setSite(java.lang.String) -> f
    void setSiteUrl(java.lang.String) -> g
    void disableSSOWhenAuthorize() -> l
    void onCreate() -> a
    void initPageView() -> m
    void initAnim() -> n
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onFinish() -> g
    void share(java.util.HashMap) -> c
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> a
    android.widget.FrameLayout access$0(com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare) -> a
    void access$1(com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare) -> b
com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare$1 -> com.banker.framework.utils.a.a.t:
    com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare this$0 -> b
    void onResult(java.util.HashMap) -> b
com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare$2 -> com.banker.framework.utils.a.a.u:
    com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare this$0 -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare$3 -> com.banker.framework.utils.a.a.v:
    com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.banker.framework.utils.share_sdk.onekeyshare.PicViewer -> com.banker.framework.utils.a.a.w:
    android.widget.ImageView ivViewer -> b
    android.graphics.Bitmap pic -> c
    void setImageBitmap(android.graphics.Bitmap) -> a
    void onCreate() -> a
    void onClick(android.view.View) -> onClick
com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView -> com.banker.framework.utils.a.a.x:
    int LINE_PER_PAGE -> a
    int COLUMN_PER_LINE -> b
    int PAGE_SIZE -> c
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> d
    android.widget.ImageView[] points -> e
    android.graphics.Bitmap grayPoint -> f
    android.graphics.Bitmap whitePoint -> g
    boolean silent -> h
    cn.sharesdk.framework.Platform[] platformList -> i
    java.util.HashMap reqData -> j
    com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare parent -> k
    java.util.ArrayList customers -> l
    java.util.HashMap hiddenPlatforms -> m
    android.view.View bgView -> n
    long lastClickTime -> o
    void init(android.content.Context) -> a
    void calPageSize() -> c
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> a
    void onConfigurationChanged() -> b
    void setData(java.util.HashMap,boolean) -> a
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> a
    cn.sharesdk.framework.Platform[] access$0(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> a
    java.util.HashMap access$1(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> b
    java.util.ArrayList access$2(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> c
    int access$3(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> d
    int access$4(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> e
    android.widget.ImageView[] access$5(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> f
    android.graphics.Bitmap access$6(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> g
    android.graphics.Bitmap access$7(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> h
    void access$8(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView,cn.sharesdk.framework.Platform[]) -> a
    com.banker.framework.utils.share_sdk.onekeyshare.OnekeyShare access$9(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView) -> i
com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$1 -> com.banker.framework.utils.a.a.y:
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView this$0 -> a
    void run() -> run
com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$2 -> com.banker.framework.utils.a.a.z:
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView this$0 -> b
    void onResult(java.util.HashMap) -> b
com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$GridView -> com.banker.framework.utils.a.a.aa:
    java.lang.Object[] beans -> a
    android.view.View$OnClickListener callback -> b
    int lines -> c
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$PlatformAdapter platformAdapter -> d
    void setData(int,java.lang.Object[]) -> a
    void init() -> a
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> b
com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$PlatformAdapter -> com.banker.framework.utils.a.a.ab:
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$GridView[] girds -> a
    java.util.List logos -> b
    android.view.View$OnClickListener callback -> c
    int lines -> d
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView platformGridView -> e
    int getCount() -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
    void onScreenChange(int,int) -> a
    com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView access$0(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$PlatformAdapter) -> a
    android.view.View$OnClickListener access$1(com.banker.framework.utils.share_sdk.onekeyshare.PlatformGridView$PlatformAdapter) -> b
com.banker.framework.utils.share_sdk.onekeyshare.ShareContentCustomizeCallback -> com.banker.framework.utils.a.a.ac:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
com.banker.framework.utils.share_sdk.onekeyshare.ShareCore -> com.banker.framework.utils.a.a.ad:
    com.banker.framework.utils.share_sdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> a
    void setShareContentCustomizeCallback(com.banker.framework.utils.share_sdk.onekeyshare.ShareContentCustomizeCallback) -> a
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> a
    boolean isUseClientToShare(java.lang.String) -> a
com.banker.framework.views.Dice -> com.banker.framework.e.a:
    int screenW -> c
    int screenH -> d
    int picW -> a
    int picH -> b
    android.graphics.Bitmap bitmap -> e
    android.graphics.Paint paint -> f
    java.util.Random random -> g
    void onDraw(android.graphics.Canvas) -> onDraw
com.banker.framework.views.TopBarView -> com.banker.framework.e.b:
    android.widget.LinearLayout layout -> a
    android.widget.Button btn_topBack -> b
    android.widget.Button btn_topRight -> c
    android.widget.TextView txtV_topTitle -> d
    void initView() -> e
    void setTopTitle(java.lang.String) -> a
    void setTopRightBtnText(java.lang.String) -> b
    void hideTopRightBtn() -> a
    void hideTopBacktBtn() -> b
    android.widget.Button getBtn_topBack() -> c
    android.widget.Button getBtn_topRight() -> d
com.banker.framework.views.down_menu.ActionItem -> com.banker.framework.e.a.a:
    android.graphics.drawable.Drawable mDrawable -> a
    java.lang.CharSequence mTitle -> b
com.banker.framework.views.down_menu.TitlePopup -> com.banker.framework.e.a.b:
    android.content.Context mContext -> b
    int LIST_PADDING -> a
    android.graphics.Rect mRect -> c
    int[] mLocation -> d
    int mScreenWidth -> e
    int mScreenHeight -> f
    boolean mIsDirty -> g
    int popupGravity -> h
    com.banker.framework.views.down_menu.TitlePopup$OnItemOnClickListener mItemOnClickListener -> i
    android.widget.ListView mListView -> j
    java.util.ArrayList mActionItems -> k
    void initUI() -> a
    void show(android.view.View) -> a
    void populateActions() -> b
    void addAction(com.banker.framework.views.down_menu.ActionItem) -> a
    void setItemOnClickListener(com.banker.framework.views.down_menu.TitlePopup$OnItemOnClickListener) -> a
    com.banker.framework.views.down_menu.TitlePopup$OnItemOnClickListener access$0(com.banker.framework.views.down_menu.TitlePopup) -> a
    java.util.ArrayList access$1(com.banker.framework.views.down_menu.TitlePopup) -> b
    android.content.Context access$2(com.banker.framework.views.down_menu.TitlePopup) -> c
com.banker.framework.views.down_menu.TitlePopup$1 -> com.banker.framework.e.a.c:
    com.banker.framework.views.down_menu.TitlePopup this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.banker.framework.views.down_menu.TitlePopup$2 -> com.banker.framework.e.a.d:
    com.banker.framework.views.down_menu.TitlePopup this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.banker.framework.views.down_menu.TitlePopup$OnItemOnClickListener -> com.banker.framework.e.a.e:
    void onItemClick(com.banker.framework.views.down_menu.ActionItem,int) -> a
com.banker.framework.views.down_menu.Util -> com.banker.framework.e.a.f:
    int getScreenWidth(android.content.Context) -> a
    int getScreenHeight(android.content.Context) -> b
com.banker.home.activity.HomeActivity -> com.banker.home.activity.HomeActivity:
    int diceNum -> c
    android.widget.RadioGroup lay_RadioButtonCount -> d
    android.widget.RadioButton radioButton_1 -> e
    android.widget.RadioButton radioButton_2 -> f
    android.widget.RadioButton radioButton_3 -> g
    android.widget.RadioButton radioButton_4 -> h
    android.widget.RadioButton radioButton_5 -> i
    android.widget.RadioGroup radioGroup_type -> j
    android.widget.RadioButton radioButton_dice -> k
    android.widget.RadioButton radioButton_bobing -> l
    boolean bobing -> m
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void startActivityAndSendData(java.lang.Class) -> b
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.banker.home.activity.LoadingActivity -> com.banker.home.activity.LoadingActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void access$0(com.banker.home.activity.LoadingActivity,java.lang.Class) -> a
com.banker.home.activity.LoadingActivity$1 -> com.banker.home.activity.a:
    com.banker.home.activity.LoadingActivity this$0 -> a
    java.util.Timer val$t -> b
    void run() -> run
com.banker.local_game.bean.Item -> com.banker.local_game.a.a:
    java.lang.String title -> a
    int diceIcon1 -> b
    int diceIcon2 -> c
    int diceIcon3 -> d
    int diceIcon4 -> e
    int diceIcon5 -> f
    int diceIcon6 -> g
com.banker.local_game.bobing.activity.LocalGameBobingActivity -> com.banker.local_game.bobing.activity.LocalGameBobingActivity:
    int[] layArray -> e
    int[] iconArray -> f
    int[] DICES -> c
    int[] DICE_IMG -> d
    int[] result -> g
    android.widget.ImageView img_diceAnimationArea -> h
    android.widget.ImageView img_close -> i
    android.widget.ImageView img_shake -> j
    android.widget.Button btn_start -> k
    android.media.MediaPlayer mp -> l
    com.banker.framework.utils.ShakeListener shakeListener -> m
    com.banker.framework.utils.HorizontalListView localGameListV -> n
    com.banker.local_game.bobing.adapter.LocalGameBobingActivityAdapter mAdapter -> o
    java.util.ArrayList toListViewActivityList -> p
    boolean start -> q
    boolean shake -> r
    android.widget.TextView txtV_dialogText -> s
    java.lang.String title -> t
    java.util.ArrayList diceIdList -> u
    com.banker.local_game.bobing.activity.LocalGameBobingActivity$MyHandler mHandler -> v
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initVariable() -> h
    void initView() -> i
    void startBobing() -> j
    void onClick(android.view.View) -> onClick
    void onShake() -> a
    void startMP() -> k
    void stopMP() -> l
    void diceAnimation() -> m
    void resultDice() -> n
    void dialog(int) -> e
    void addTopList() -> o
    void showResult() -> p
    void result(int) -> f
    void hideDice() -> q
    void gotoNextActivity() -> r
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    android.widget.ImageView access$0(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> a
    void access$1(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> b
    void access$2(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> c
    void access$3(com.banker.local_game.bobing.activity.LocalGameBobingActivity,boolean) -> a
    com.banker.local_game.bobing.activity.LocalGameBobingActivity$MyHandler access$4(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> d
    void access$5(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> e
    void access$6(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> f
    void access$7(com.banker.local_game.bobing.activity.LocalGameBobingActivity,java.lang.Class) -> a
    void access$8(com.banker.local_game.bobing.activity.LocalGameBobingActivity,android.app.AlertDialog,boolean) -> a
    void access$9(com.banker.local_game.bobing.activity.LocalGameBobingActivity,boolean) -> b
    android.widget.TextView access$10(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> g
    com.banker.framework.utils.ShakeListener access$11(com.banker.local_game.bobing.activity.LocalGameBobingActivity) -> h
com.banker.local_game.bobing.activity.LocalGameBobingActivity$1 -> com.banker.local_game.bobing.activity.a:
    com.banker.local_game.bobing.activity.LocalGameBobingActivity this$0 -> a
    void run() -> run
com.banker.local_game.bobing.activity.LocalGameBobingActivity$2 -> com.banker.local_game.bobing.activity.b:
    com.banker.local_game.bobing.activity.LocalGameBobingActivity this$0 -> a
    void onItemClick(com.banker.framework.views.down_menu.ActionItem,int) -> a
com.banker.local_game.bobing.activity.LocalGameBobingActivity$3 -> com.banker.local_game.bobing.activity.c:
    com.banker.local_game.bobing.activity.LocalGameBobingActivity this$0 -> a
    android.app.AlertDialog val$_alertDialog -> b
    void onClick(android.view.View) -> onClick
com.banker.local_game.bobing.activity.LocalGameBobingActivity$4 -> com.banker.local_game.bobing.activity.d:
    com.banker.local_game.bobing.activity.LocalGameBobingActivity this$0 -> a
    android.app.AlertDialog val$_alertDialog -> b
    void onClick(android.view.View) -> onClick
com.banker.local_game.bobing.activity.LocalGameBobingActivity$MyHandler -> com.banker.local_game.bobing.activity.e:
    java.lang.ref.WeakReference weakReference -> b
    com.banker.local_game.bobing.activity.LocalGameBobingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.banker.local_game.bobing.activity.LocalGameBobingListViewActivity -> com.banker.local_game.bobing.activity.LocalGameBobingListViewActivity:
    java.util.ArrayList adapterDatas -> c
    android.widget.ListView listViewActivity_listV -> d
    com.banker.local_game.dice.adapter.LocalGameListViewActivityAdapter listViewActivityAdapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initDatas() -> h
    void initView() -> i
    void onClick(android.view.View) -> onClick
com.banker.local_game.bobing.adapter.LocalGameBobingActivityAdapter -> com.banker.local_game.bobing.a.a:
    java.util.ArrayList mDiceBeanList -> a
    android.content.Context mContext -> b
    void initDatas(java.util.ArrayList) -> a
    void updateList(com.banker.local_game.bean.Item) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.banker.local_game.bobing.adapter.LocalGameBobingActivityAdapter$ViewHolder -> com.banker.local_game.bobing.a.b:
    android.widget.TextView txt_localGameListItemTitle -> a
    android.widget.ImageView imgV_localGameListItemDice1 -> b
    android.widget.ImageView imgV_localGameListItemDice2 -> c
    android.widget.ImageView imgV_localGameListItemDice3 -> d
    android.widget.ImageView imgV_localGameListItemDice4 -> e
    android.widget.ImageView imgV_localGameListItemDice5 -> f
    android.widget.ImageView imgV_localGameListItemDice6 -> g
    com.banker.local_game.bobing.adapter.LocalGameBobingActivityAdapter this$0 -> h
com.banker.local_game.dice.activity.LocalGameDiceActivity -> com.banker.local_game.dice.activity.LocalGameDiceActivity:
    int num -> e
    int[] DICE_IMG -> c
    int[] DICES -> d
    int[] layout -> f
    int[] centerDice -> g
    com.banker.framework.utils.ShakeListener shakeListener -> h
    boolean screen -> i
    boolean isCup -> j
    boolean isStart -> k
    boolean shake -> l
    com.banker.framework.utils.HorizontalListView localGameListV -> m
    android.widget.ImageView img_cup -> n
    android.widget.ImageView img_shake -> o
    android.widget.Button btn_start -> p
    android.widget.LinearLayout lay_centerDice -> q
    java.util.ArrayList diceIdList -> r
    com.banker.local_game.dice.adapter.LocalGameActivityAdapter mAdapter -> s
    java.util.ArrayList toListViewActivityList -> t
    android.widget.LinearLayout[] diceLayout -> u
    int[] diceIdArray -> v
    int count -> w
    android.widget.TextView txtV_dialogText -> x
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initDiceLayout() -> h
    void initVariable() -> i
    void initView() -> j
    void addDice() -> k
    void hideCenterDice() -> l
    void showTopCenterDice() -> m
    void startSound() -> n
    void addListItem() -> o
    void onClick(android.view.View) -> onClick
    void onShake() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void dialog() -> p
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    java.util.ArrayList access$0(com.banker.local_game.dice.activity.LocalGameDiceActivity) -> a
    void access$1(com.banker.local_game.dice.activity.LocalGameDiceActivity) -> b
    void access$2(com.banker.local_game.dice.activity.LocalGameDiceActivity,java.lang.Class) -> a
    android.widget.TextView access$3(com.banker.local_game.dice.activity.LocalGameDiceActivity) -> c
    com.banker.framework.utils.ShakeListener access$4(com.banker.local_game.dice.activity.LocalGameDiceActivity) -> d
com.banker.local_game.dice.activity.LocalGameDiceActivity$1 -> com.banker.local_game.dice.activity.a:
    com.banker.local_game.dice.activity.LocalGameDiceActivity this$0 -> a
    void onItemClick(com.banker.framework.views.down_menu.ActionItem,int) -> a
com.banker.local_game.dice.activity.LocalGameDiceActivity$2 -> com.banker.local_game.dice.activity.b:
    com.banker.local_game.dice.activity.LocalGameDiceActivity this$0 -> a
    android.app.Dialog val$_alertDialog -> b
    void onClick(android.view.View) -> onClick
com.banker.local_game.dice.activity.LocalGameDiceActivity$3 -> com.banker.local_game.dice.activity.c:
    com.banker.local_game.dice.activity.LocalGameDiceActivity this$0 -> a
    android.app.Dialog val$_alertDialog -> b
    void onClick(android.view.View) -> onClick
com.banker.local_game.dice.activity.LocalGameListViewActivity -> com.banker.local_game.dice.activity.LocalGameListViewActivity:
    java.util.ArrayList adapterDatas -> c
    android.widget.ListView listViewActivity_listV -> d
    com.banker.local_game.dice.adapter.LocalGameListViewActivityAdapter listViewActivityAdapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initDatas() -> h
    void initView() -> i
    void onClick(android.view.View) -> onClick
com.banker.local_game.dice.adapter.LocalGameActivityAdapter -> com.banker.local_game.dice.a.a:
    java.util.ArrayList mDiceBeanList -> a
    android.content.Context mContext -> b
    void initDatas(java.util.ArrayList) -> a
    void updateList(com.banker.local_game.bean.Item) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.banker.local_game.dice.adapter.LocalGameActivityAdapter$ViewHolder -> com.banker.local_game.dice.a.b:
    android.widget.TextView txt_localGameListItemTitle -> a
    android.widget.ImageView imgV_localGameListItemDice1 -> b
    android.widget.ImageView imgV_localGameListItemDice2 -> c
    android.widget.ImageView imgV_localGameListItemDice3 -> d
    android.widget.ImageView imgV_localGameListItemDice4 -> e
    android.widget.ImageView imgV_localGameListItemDice5 -> f
    com.banker.local_game.dice.adapter.LocalGameActivityAdapter this$0 -> g
com.banker.local_game.dice.adapter.LocalGameListViewActivityAdapter -> com.banker.local_game.dice.a.c:
    java.util.ArrayList mDiceBeanList -> a
    android.content.Context mContext -> b
    void initDatas(java.util.ArrayList) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.banker.local_game.dice.adapter.LocalGameListViewActivityAdapter$ViewHolder -> com.banker.local_game.dice.a.d:
    android.widget.TextView txt_localGameListItemActivityTitle -> a
    android.widget.ImageView imgV_localGameListItemActivityDice1 -> b
    android.widget.ImageView imgV_localGameListItemActivityDice2 -> c
    android.widget.ImageView imgV_localGameListItemActivityDice3 -> d
    android.widget.ImageView imgV_localGameListItemActivityDice4 -> e
    android.widget.ImageView imgV_localGameListItemActivityDice5 -> f
    com.banker.local_game.dice.adapter.LocalGameListViewActivityAdapter this$0 -> g
com.banker.more.activity.FeedBackActivity -> com.banker.more.activity.FeedBackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void onClick(android.view.View) -> onClick
com.banker.more.activity.HelpActivity -> com.banker.more.activity.HelpActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.banker.more.activity.MoreActivity -> com.banker.more.activity.MoreActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initView() -> h
    void initTop() -> i
    void onClick(android.view.View) -> onClick
    void startMarket() -> j
    void gotoDownWebsite(java.lang.String) -> c
com.banker.more.activity.RecommendActivity -> com.banker.more.activity.RecommendActivity:
    android.widget.ListView listView -> c
    java.util.ArrayList datasList -> d
    com.banker.more.activity.RecommendActivity$MyHandler myHandler -> e
    void loadWebIcon(java.util.ArrayList) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> g
    void initView() -> h
    void initData() -> i
    java.util.ArrayList parseJson(java.lang.String) -> c
    void onClick(android.view.View) -> onClick
    void gotoDownWebsite(java.lang.String) -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.util.ArrayList access$0(com.banker.more.activity.RecommendActivity,java.lang.String) -> a
    void access$1(com.banker.more.activity.RecommendActivity,java.util.ArrayList) -> a
    java.util.ArrayList access$2(com.banker.more.activity.RecommendActivity) -> a
    void access$3(com.banker.more.activity.RecommendActivity,java.util.ArrayList) -> b
    void access$4(com.banker.more.activity.RecommendActivity) -> b
    android.widget.ListView access$5(com.banker.more.activity.RecommendActivity) -> c
    com.banker.more.activity.RecommendActivity$MyHandler access$6(com.banker.more.activity.RecommendActivity) -> d
com.banker.more.activity.RecommendActivity$1 -> com.banker.more.activity.a:
    com.banker.more.activity.RecommendActivity this$0 -> a
    java.util.ArrayList val$datasLists -> b
    void run() -> run
com.banker.more.activity.RecommendActivity$2 -> com.banker.more.activity.b:
    com.banker.more.activity.RecommendActivity this$0 -> a
    void run() -> run
com.banker.more.activity.RecommendActivity$MyHandler -> com.banker.more.activity.c:
    com.banker.more.activity.RecommendActivity mActivity -> a
    java.lang.ref.WeakReference weakReference -> b
    void handleMessage(android.os.Message) -> handleMessage
com.banker.more.adapter.MyAdapter -> com.banker.more.a.a:
    android.content.Context context -> a
    java.util.ArrayList itemsList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.banker.more.adapter.MyAdapter$ViewHolder -> com.banker.more.a.b:
    android.widget.TextView tv_appTitle -> a
    android.widget.TextView tv_appSubtitle -> b
    android.widget.ImageView imgV_appLogo -> c
    android.widget.Button btn_download -> d
    com.banker.more.adapter.MyAdapter this$0 -> e
com.banker.more.bean.Item -> com.banker.more.b.a:
    java.lang.String apkUrl -> a
    java.lang.String name -> b
    java.lang.String detail -> c
    java.lang.String iconUrl -> d
    android.graphics.Bitmap bitmap -> e
    int id -> f
m.framework.network.NetworkHelper -> a.a.a.a:
    void download(java.lang.String,m.framework.network.ResponseCallback) -> a
    org.apache.http.client.HttpClient getSSLHttpClient() -> a
m.framework.network.ResponseCallback -> a.a.a.b:
    void onResponse(java.io.InputStream) -> a
m.framework.network.SSLSocketFactoryEx -> a.a.a.c:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> a.a.a.d:
    m.framework.network.SSLSocketFactoryEx this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.ui.widget.asyncview.AsyncImageView -> a.a.b.a.a.a:
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> a
    java.util.Random rnd -> b
    java.lang.String cacheDir -> c
    java.lang.String url -> d
    int defaultRes -> e
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> f
    void init(android.content.Context) -> a
    void setOnImageGotListener(m.framework.ui.widget.asyncview.OnImageGotListener) -> setOnImageGotListener
    java.lang.String getUrl() -> getUrl
    void execute(java.lang.String) -> a
    void execute(java.lang.String,int) -> a
    android.graphics.Bitmap getDefaultBitmap(int) -> a
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> a.a.b.a.a.b:
    java.lang.String getUrl() -> getUrl
m.framework.ui.widget.asyncview.BitmapCallback -> a.a.b.a.a.c:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> a
m.framework.ui.widget.asyncview.BitmapProcessor -> a.a.b.a.a.d:
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> a
    java.util.WeakHashMap cacheMap -> b
    boolean work -> c
    java.util.Vector reqList -> d
    java.io.File cacheDir -> e
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> f
    java.util.Vector netReqTPS -> g
    void prepare(java.lang.String) -> a
    void start() -> a
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> a
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> b
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> a
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> b
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> c
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> d
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> e
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> f
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> a.a.b.a.a.e:
    java.lang.String url -> a
    m.framework.ui.widget.asyncview.BitmapCallback callback -> b
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> c
    long reqTime -> d
    android.graphics.Bitmap image -> e
    void throwComplete(android.graphics.Bitmap) -> a
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> a
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> a
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> a
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> a
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> a.a.b.a.a.f:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> a
    void scan() -> a
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> a
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> b
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> a.a.b.a.a.g:
    int counter -> b
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> a
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> a.a.b.a.a.h:
    java.io.InputStream in -> a
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> a.a.b.a.a.i:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> a
    long lastReport -> b
    boolean localType -> c
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> d
    void run() -> run
    void doLocalTask() -> a
    void doNetworkTask() -> b
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void saveFile(android.graphics.Bitmap,java.io.File) -> a
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> a
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> a
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> b
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> a
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> a
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> c
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> a.a.b.a.a.j:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> a
    java.io.File val$file -> b
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> c
    void onResponse(java.io.InputStream) -> a
m.framework.ui.widget.asyncview.OnImageGotListener -> a.a.b.a.a.k:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> a
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> a.a.b.a.a.l:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> a
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> a
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> a.a.b.a.b.a:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnListStopScrollListener -> a.a.b.a.b.b:
    void onListStopScrolling(int,int) -> a
m.framework.ui.widget.pulltorefresh.OnScrollListener -> a.a.b.a.b.c:
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> a
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> a.a.b.a.b.d:
    android.content.Context context -> a
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> b
    android.content.Context getContext() -> e
    void notifyDataSetChanged() -> f
    android.view.View getHeaderView() -> b
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> g
    boolean isPullReady() -> h
    void onPullDown(int) -> c
    void onRequest() -> c
    void onReversed() -> d
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> a.a.b.a.b.e:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
    long getItemId(int) -> b
    java.lang.Object getItem(int) -> d
    int getCount() -> a
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> a.a.b.a.b.f:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> a
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> b
    boolean fling -> c
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> d
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> g
    boolean isPullReady() -> h
    android.widget.ListView getListView() -> i
    boolean isFling() -> j
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> a
    void notifyDataSetChanged() -> f
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> a
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> a
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> b
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> c
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> a.a.b.a.b.g:
    int firstVisibleItem -> b
    int visibleItemCount -> c
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> a.a.b.a.b.h:
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> a
    android.view.View headerView -> b
    android.view.View bodyView -> c
    int headerHeight -> d
    int top -> e
    float downY -> f
    boolean requesting -> g
    boolean pullingLock -> h
    java.lang.Runnable stopAct -> i
    long refreshTime -> j
    void init() -> b
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> a
    void performRequest() -> c
    void stopRequest() -> d
    void performPulling(boolean) -> a
    void reversePulling() -> e
    void stopPulling() -> a
    boolean canPull() -> f
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> a
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> b
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> a.a.b.a.b.i:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> a
    void run() -> run
m.framework.ui.widget.pulltorefresh.Scrollable -> a.a.b.a.b.j:
m.framework.ui.widget.pulltorefresh.ScrollableListView -> a.a.b.a.b.k:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> a
    boolean pullEnable -> b
    void init(android.content.Context) -> a
    boolean isReadyToPull() -> a
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> a
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> a.a.b.a.b.l:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> a
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> a
m.framework.ui.widget.viewpager.ViewPagerAdapter -> a.a.b.a.c.a:
    int getCount() -> a
    void onScreenChange(int,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
m.framework.ui.widget.viewpager.ViewPagerClassic -> a.a.b.a.c.b:
    int currentScreen -> a
    android.widget.Scroller scroller -> b
    android.view.VelocityTracker mVelocityTracker -> c
    float lastMotionX -> d
    float lastMotionY -> e
    int touchState -> f
    int touchSlop -> g
    int mMaximumVelocity -> h
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> i
    void init(android.content.Context) -> a
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> b
    void scrollToScreen(int) -> a
    void scrollToScreen(int,boolean) -> a
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> a.a.b.a.c.c:
    float[] values -> a
    m.framework.ui.widget.viewpager.ViewPagerClassic this$0 -> b
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> a.a.c.a:
    m.framework.utils.Hashon hashon -> a
    java.lang.String MD5(java.lang.String) -> a
    byte[] rawMD5(java.lang.String) -> b
m.framework.utils.DeviceHelper -> a.a.c.b:
    android.content.Context context -> a
    java.lang.String getPackageName() -> a
    boolean getSdcardState() -> b
    java.lang.String getSdcardPath() -> c
m.framework.utils.HEX -> a.a.c.c:
    char[] DIGITS -> a
    java.lang.String toHex(byte[]) -> a
m.framework.utils.Hashon -> a.a.c.d:
m.framework.utils.UIHandler -> a.a.c.e:
    android.os.Handler handler -> a
    void prepare() -> a
    void handleMessage(android.os.Message) -> b
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> a
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> a
    void access$0(android.os.Message) -> a
m.framework.utils.UIHandler$1 -> a.a.c.f:
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.utils.Utils -> a.a.c.g:
    boolean isNullOrEmpty(java.lang.String) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> b
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> a
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> a
    android.graphics.Bitmap getBitmap(java.io.File,int) -> a
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> a
    java.lang.String getFileMime(java.lang.String) -> c
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> a
    int getScreenWidth(android.content.Context) -> a
